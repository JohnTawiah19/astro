import * as babel from "@babel/core";
const validAstroGlobalNames = new Set(["Astro", "Astro2"]);
function astro({ config }) {
  return {
    name: "astro:postprocess",
    async transform(code, id) {
      if (!id.endsWith(".astro") && !id.endsWith(".md")) {
        return null;
      }
      if (!code.includes("fetchContent")) {
        return null;
      }
      const result = await babel.transformAsync(code, {
        sourceType: "module",
        sourceMaps: true,
        plugins: [
          () => {
            return {
              visitor: {
                StringLiteral(path) {
                  if (path.parent.type !== "CallExpression" || path.parent.callee.type !== "MemberExpression" || !validAstroGlobalNames.has(path.parent.callee.object.name) || path.parent.callee.property.name !== "fetchContent") {
                    return;
                  }
                  const { value } = path.node;
                  if (/[a-z]\:\/\//.test(value)) {
                    return;
                  }
                  path.replaceWith({
                    type: "CallExpression",
                    callee: {
                      type: "MemberExpression",
                      object: { type: "MetaProperty", meta: { type: "Identifier", name: "import" }, property: { type: "Identifier", name: "meta" } },
                      property: { type: "Identifier", name: "globEager" },
                      computed: false
                    },
                    arguments: [path.node]
                  });
                }
              }
            };
          }
        ]
      });
      if (!result || !result.code) {
        return null;
      }
      return { code: result.code, map: result.map };
    }
  };
}
export {
  astro as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vc3JjL3ZpdGUtcGx1Z2luLWFzdHJvLXBvc3Rwcm9jZXNzL2luZGV4LnRzIl0sCiAgIm1hcHBpbmdzIjogIkFBS0E7QUFPQSxNQUFNLHdCQUF3QixJQUFJLElBQUksQ0FBQyxTQUFTO0FBRWpDLGVBQWUsRUFBRSxVQUFzQztBQUNyRSxTQUFPO0FBQUEsSUFDTixNQUFNO0FBQUEsVUFDQSxVQUFVLE1BQU0sSUFBSTtBQUV6QixVQUFJLENBQUMsR0FBRyxTQUFTLGFBQWEsQ0FBQyxHQUFHLFNBQVMsUUFBUTtBQUNsRCxlQUFPO0FBQUE7QUFLUixVQUFJLENBQUMsS0FBSyxTQUFTLGlCQUFpQjtBQUNuQyxlQUFPO0FBQUE7QUFJUixZQUFNLFNBQVMsTUFBTSxNQUFNLGVBQWUsTUFBTTtBQUFBLFFBQy9DLFlBQVk7QUFBQSxRQUNaLFlBQVk7QUFBQSxRQUNaLFNBQVM7QUFBQSxVQUNSLE1BQU07QUFDTCxtQkFBTztBQUFBLGNBQ04sU0FBUztBQUFBLGdCQUNSLGNBQWMsTUFBK0M7QUFDNUQsc0JBQ0MsS0FBSyxPQUFPLFNBQVMsb0JBQ3JCLEtBQUssT0FBTyxPQUFPLFNBQVMsc0JBQzVCLENBQUMsc0JBQXNCLElBQUssS0FBSyxPQUFPLE9BQU8sT0FBZSxTQUM3RCxLQUFLLE9BQU8sT0FBTyxTQUFpQixTQUFTLGdCQUM3QztBQUNEO0FBQUE7QUFFRCx3QkFBTSxFQUFFLFVBQVUsS0FBSztBQUN2QixzQkFBSSxjQUFjLEtBQUssUUFBUTtBQUM5QjtBQUFBO0FBRUQsdUJBQUssWUFBWTtBQUFBLG9CQUNoQixNQUFNO0FBQUEsb0JBQ04sUUFBUTtBQUFBLHNCQUNQLE1BQU07QUFBQSxzQkFDTixRQUFRLEVBQUUsTUFBTSxnQkFBZ0IsTUFBTSxFQUFFLE1BQU0sY0FBYyxNQUFNLFlBQVksVUFBVSxFQUFFLE1BQU0sY0FBYyxNQUFNO0FBQUEsc0JBQ3BILFVBQVUsRUFBRSxNQUFNLGNBQWMsTUFBTTtBQUFBLHNCQUN0QyxVQUFVO0FBQUE7QUFBQSxvQkFFWCxXQUFXLENBQUMsS0FBSztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBVXhCLFVBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxNQUFNO0FBQzVCLGVBQU87QUFBQTtBQUdSLGFBQU8sRUFBRSxNQUFNLE9BQU8sTUFBTSxLQUFLLE9BQU87QUFBQTtBQUFBO0FBQUE7IiwKICAibmFtZXMiOiBbXQp9Cg==
